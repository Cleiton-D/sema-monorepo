# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  workflow_dispatch:

# A wlow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: build api
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - run: cd lib/api && npm install
      - run: cd lib/api && npm run build

      - name: setup client
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: build client
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.API_URL }}
        run: |
          cd lib/client
          npm install
          npm run build

      - name: down previous version
        id: deploy
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: |
            DIR="$HOME/test"
            if [ -d "$DIR" ]; then
              cd test
              docker-compose down
              cd ..
              mv test test_bk
            fi

          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          privateKey: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: copy new version
        if: success()
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: "docker-compose.yaml, lib/api/Dockerfile, lib/api/dist, lib/api/package.json, lib/api/init.sh, lib/api/ormconfig.js, lib/client/Dockerfile, lib/client/node_modules, lib/client/public, lib/client/.next, lib/client/package.json"
          target: "test"

      - name: deploy new version
        if: success()
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: |
            export POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
            export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            export POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
            export POSTGRES_USERNAME=${{ secrets.POSTGRES_USERNAME }}
            export POSTGRES_DATABASE=${{ secrets.POSTGRES_DATABASE }}
            export APP_URL=${{ secrets.APP_URL }}
            export API_URL=${{ secrets.API_URL }}

            cd test && docker-compose up --build

          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          privateKey: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: delete previous version
        if: success()
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: |
            BK_DIR="$HOME/teste_bkp"
            if [ -d "$BK_DIR" ]; then
              rm -rf teste_bkp
            fi
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          privateKey: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: restore previous version
        if: failure()
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: |
            DIR="$HOME/test"
            BK_DIR="$HOME/teste_bkp"

            if [ -d "$DIR" ]; then
              cd test
              docker-compose down
              cd ..
              rm -rf test
              
              if [ -d "$BK_DIR" ]; then
                mv teste_bkp test
                cd test
                docker-compose up --build; 
              fi
            fi

          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          privateKey: ${{ secrets.SSH_PRIVATE_KEY }}
