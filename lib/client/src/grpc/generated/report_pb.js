// source: report.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.report.Class', null, global);
goog.exportSymbol('proto.report.ClassDiaryGenerateRequest', null, global);
goog.exportSymbol('proto.report.ClassDiaryGenerateResponse', null, global);
goog.exportSymbol('proto.report.Enrollment', null, global);
goog.exportSymbol('proto.report.FinalResult', null, global);
goog.exportSymbol('proto.report.MinifiedAttendance', null, global);
goog.exportSymbol('proto.report.SchoolSubjectClassDiary', null, global);
goog.exportSymbol('proto.report.SchoolTermItems', null, global);
goog.exportSymbol('proto.report.SchoolTermSchoolReports', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.report.MinifiedAttendance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.report.MinifiedAttendance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.report.MinifiedAttendance.displayName = 'proto.report.MinifiedAttendance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.report.Class = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.report.Class, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.report.Class.displayName = 'proto.report.Class';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.report.SchoolTermSchoolReports = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.report.SchoolTermSchoolReports, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.report.SchoolTermSchoolReports.displayName = 'proto.report.SchoolTermSchoolReports';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.report.SchoolTermItems = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.report.SchoolTermItems.repeatedFields_, null);
};
goog.inherits(proto.report.SchoolTermItems, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.report.SchoolTermItems.displayName = 'proto.report.SchoolTermItems';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.report.SchoolSubjectClassDiary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.report.SchoolSubjectClassDiary.repeatedFields_, null);
};
goog.inherits(proto.report.SchoolSubjectClassDiary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.report.SchoolSubjectClassDiary.displayName = 'proto.report.SchoolSubjectClassDiary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.report.Enrollment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.report.Enrollment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.report.Enrollment.displayName = 'proto.report.Enrollment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.report.FinalResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.report.FinalResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.report.FinalResult.displayName = 'proto.report.FinalResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.report.ClassDiaryGenerateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.report.ClassDiaryGenerateRequest.repeatedFields_, null);
};
goog.inherits(proto.report.ClassDiaryGenerateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.report.ClassDiaryGenerateRequest.displayName = 'proto.report.ClassDiaryGenerateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.report.ClassDiaryGenerateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.report.ClassDiaryGenerateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.report.ClassDiaryGenerateResponse.displayName = 'proto.report.ClassDiaryGenerateResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.report.MinifiedAttendance.prototype.toObject = function(opt_includeInstance) {
  return proto.report.MinifiedAttendance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.report.MinifiedAttendance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.report.MinifiedAttendance.toObject = function(includeInstance, msg) {
  var f, obj = {
    studentName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    classDate: (f = msg.getClassDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    attendance: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.report.MinifiedAttendance}
 */
proto.report.MinifiedAttendance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.report.MinifiedAttendance;
  return proto.report.MinifiedAttendance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.report.MinifiedAttendance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.report.MinifiedAttendance}
 */
proto.report.MinifiedAttendance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStudentName(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setClassDate(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAttendance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.report.MinifiedAttendance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.report.MinifiedAttendance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.report.MinifiedAttendance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.report.MinifiedAttendance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStudentName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClassDate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAttendance();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string student_name = 1;
 * @return {string}
 */
proto.report.MinifiedAttendance.prototype.getStudentName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.MinifiedAttendance} returns this
 */
proto.report.MinifiedAttendance.prototype.setStudentName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp class_date = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.report.MinifiedAttendance.prototype.getClassDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.report.MinifiedAttendance} returns this
*/
proto.report.MinifiedAttendance.prototype.setClassDate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.report.MinifiedAttendance} returns this
 */
proto.report.MinifiedAttendance.prototype.clearClassDate = function() {
  return this.setClassDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.report.MinifiedAttendance.prototype.hasClassDate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool attendance = 3;
 * @return {boolean}
 */
proto.report.MinifiedAttendance.prototype.getAttendance = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.report.MinifiedAttendance} returns this
 */
proto.report.MinifiedAttendance.prototype.setAttendance = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.report.Class.prototype.toObject = function(opt_includeInstance) {
  return proto.report.Class.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.report.Class} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.report.Class.toObject = function(includeInstance, msg) {
  var f, obj = {
    classdate: jspb.Message.getFieldWithDefault(msg, 1, ""),
    taughtcontent: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.report.Class}
 */
proto.report.Class.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.report.Class;
  return proto.report.Class.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.report.Class} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.report.Class}
 */
proto.report.Class.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassdate(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaughtcontent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.report.Class.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.report.Class.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.report.Class} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.report.Class.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClassdate();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTaughtcontent();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string classDate = 1;
 * @return {string}
 */
proto.report.Class.prototype.getClassdate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.Class} returns this
 */
proto.report.Class.prototype.setClassdate = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string taughtContent = 2;
 * @return {string}
 */
proto.report.Class.prototype.getTaughtcontent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.Class} returns this
 */
proto.report.Class.prototype.setTaughtcontent = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.report.SchoolTermSchoolReports.prototype.toObject = function(opt_includeInstance) {
  return proto.report.SchoolTermSchoolReports.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.report.SchoolTermSchoolReports} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.report.SchoolTermSchoolReports.toObject = function(includeInstance, msg) {
  var f, obj = {
    schoolsubject: jspb.Message.getFieldWithDefault(msg, 1, ""),
    schoolsubjectorder: jspb.Message.getFieldWithDefault(msg, 2, 0),
    studentname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    average: jspb.Message.getFieldWithDefault(msg, 4, ""),
    absences: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.report.SchoolTermSchoolReports}
 */
proto.report.SchoolTermSchoolReports.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.report.SchoolTermSchoolReports;
  return proto.report.SchoolTermSchoolReports.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.report.SchoolTermSchoolReports} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.report.SchoolTermSchoolReports}
 */
proto.report.SchoolTermSchoolReports.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchoolsubject(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSchoolsubjectorder(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStudentname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAverage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAbsences(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.report.SchoolTermSchoolReports.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.report.SchoolTermSchoolReports.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.report.SchoolTermSchoolReports} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.report.SchoolTermSchoolReports.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchoolsubject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSchoolsubjectorder();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getStudentname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAverage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string schoolSubject = 1;
 * @return {string}
 */
proto.report.SchoolTermSchoolReports.prototype.getSchoolsubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.SchoolTermSchoolReports} returns this
 */
proto.report.SchoolTermSchoolReports.prototype.setSchoolsubject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 schoolSubjectOrder = 2;
 * @return {number}
 */
proto.report.SchoolTermSchoolReports.prototype.getSchoolsubjectorder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.report.SchoolTermSchoolReports} returns this
 */
proto.report.SchoolTermSchoolReports.prototype.setSchoolsubjectorder = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string studentName = 3;
 * @return {string}
 */
proto.report.SchoolTermSchoolReports.prototype.getStudentname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.SchoolTermSchoolReports} returns this
 */
proto.report.SchoolTermSchoolReports.prototype.setStudentname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string average = 4;
 * @return {string}
 */
proto.report.SchoolTermSchoolReports.prototype.getAverage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.SchoolTermSchoolReports} returns this
 */
proto.report.SchoolTermSchoolReports.prototype.setAverage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 absences = 5;
 * @return {number}
 */
proto.report.SchoolTermSchoolReports.prototype.getAbsences = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.report.SchoolTermSchoolReports} returns this
 */
proto.report.SchoolTermSchoolReports.prototype.setAbsences = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.report.SchoolTermSchoolReports} returns this
 */
proto.report.SchoolTermSchoolReports.prototype.clearAbsences = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.report.SchoolTermSchoolReports.prototype.hasAbsences = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.report.SchoolTermItems.repeatedFields_ = [3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.report.SchoolTermItems.prototype.toObject = function(opt_includeInstance) {
  return proto.report.SchoolTermItems.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.report.SchoolTermItems} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.report.SchoolTermItems.toObject = function(includeInstance, msg) {
  var f, obj = {
    schoolterm: jspb.Message.getFieldWithDefault(msg, 1, ""),
    schooltermend: (f = msg.getSchooltermend()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    attendancesList: jspb.Message.toObjectList(msg.getAttendancesList(),
    proto.report.MinifiedAttendance.toObject, includeInstance),
    classesList: jspb.Message.toObjectList(msg.getClassesList(),
    proto.report.Class.toObject, includeInstance),
    schoolreportList: jspb.Message.toObjectList(msg.getSchoolreportList(),
    proto.report.SchoolTermSchoolReports.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.report.SchoolTermItems}
 */
proto.report.SchoolTermItems.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.report.SchoolTermItems;
  return proto.report.SchoolTermItems.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.report.SchoolTermItems} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.report.SchoolTermItems}
 */
proto.report.SchoolTermItems.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchoolterm(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSchooltermend(value);
      break;
    case 3:
      var value = new proto.report.MinifiedAttendance;
      reader.readMessage(value,proto.report.MinifiedAttendance.deserializeBinaryFromReader);
      msg.addAttendances(value);
      break;
    case 4:
      var value = new proto.report.Class;
      reader.readMessage(value,proto.report.Class.deserializeBinaryFromReader);
      msg.addClasses(value);
      break;
    case 5:
      var value = new proto.report.SchoolTermSchoolReports;
      reader.readMessage(value,proto.report.SchoolTermSchoolReports.deserializeBinaryFromReader);
      msg.addSchoolreport(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.report.SchoolTermItems.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.report.SchoolTermItems.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.report.SchoolTermItems} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.report.SchoolTermItems.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchoolterm();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSchooltermend();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAttendancesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.report.MinifiedAttendance.serializeBinaryToWriter
    );
  }
  f = message.getClassesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.report.Class.serializeBinaryToWriter
    );
  }
  f = message.getSchoolreportList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.report.SchoolTermSchoolReports.serializeBinaryToWriter
    );
  }
};


/**
 * optional string schoolTerm = 1;
 * @return {string}
 */
proto.report.SchoolTermItems.prototype.getSchoolterm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.SchoolTermItems} returns this
 */
proto.report.SchoolTermItems.prototype.setSchoolterm = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp schoolTermEnd = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.report.SchoolTermItems.prototype.getSchooltermend = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.report.SchoolTermItems} returns this
*/
proto.report.SchoolTermItems.prototype.setSchooltermend = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.report.SchoolTermItems} returns this
 */
proto.report.SchoolTermItems.prototype.clearSchooltermend = function() {
  return this.setSchooltermend(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.report.SchoolTermItems.prototype.hasSchooltermend = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated MinifiedAttendance attendances = 3;
 * @return {!Array<!proto.report.MinifiedAttendance>}
 */
proto.report.SchoolTermItems.prototype.getAttendancesList = function() {
  return /** @type{!Array<!proto.report.MinifiedAttendance>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.report.MinifiedAttendance, 3));
};


/**
 * @param {!Array<!proto.report.MinifiedAttendance>} value
 * @return {!proto.report.SchoolTermItems} returns this
*/
proto.report.SchoolTermItems.prototype.setAttendancesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.report.MinifiedAttendance=} opt_value
 * @param {number=} opt_index
 * @return {!proto.report.MinifiedAttendance}
 */
proto.report.SchoolTermItems.prototype.addAttendances = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.report.MinifiedAttendance, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.report.SchoolTermItems} returns this
 */
proto.report.SchoolTermItems.prototype.clearAttendancesList = function() {
  return this.setAttendancesList([]);
};


/**
 * repeated Class classes = 4;
 * @return {!Array<!proto.report.Class>}
 */
proto.report.SchoolTermItems.prototype.getClassesList = function() {
  return /** @type{!Array<!proto.report.Class>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.report.Class, 4));
};


/**
 * @param {!Array<!proto.report.Class>} value
 * @return {!proto.report.SchoolTermItems} returns this
*/
proto.report.SchoolTermItems.prototype.setClassesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.report.Class=} opt_value
 * @param {number=} opt_index
 * @return {!proto.report.Class}
 */
proto.report.SchoolTermItems.prototype.addClasses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.report.Class, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.report.SchoolTermItems} returns this
 */
proto.report.SchoolTermItems.prototype.clearClassesList = function() {
  return this.setClassesList([]);
};


/**
 * repeated SchoolTermSchoolReports schoolReport = 5;
 * @return {!Array<!proto.report.SchoolTermSchoolReports>}
 */
proto.report.SchoolTermItems.prototype.getSchoolreportList = function() {
  return /** @type{!Array<!proto.report.SchoolTermSchoolReports>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.report.SchoolTermSchoolReports, 5));
};


/**
 * @param {!Array<!proto.report.SchoolTermSchoolReports>} value
 * @return {!proto.report.SchoolTermItems} returns this
*/
proto.report.SchoolTermItems.prototype.setSchoolreportList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.report.SchoolTermSchoolReports=} opt_value
 * @param {number=} opt_index
 * @return {!proto.report.SchoolTermSchoolReports}
 */
proto.report.SchoolTermItems.prototype.addSchoolreport = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.report.SchoolTermSchoolReports, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.report.SchoolTermItems} returns this
 */
proto.report.SchoolTermItems.prototype.clearSchoolreportList = function() {
  return this.setSchoolreportList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.report.SchoolSubjectClassDiary.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.report.SchoolSubjectClassDiary.prototype.toObject = function(opt_includeInstance) {
  return proto.report.SchoolSubjectClassDiary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.report.SchoolSubjectClassDiary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.report.SchoolSubjectClassDiary.toObject = function(includeInstance, msg) {
  var f, obj = {
    schoolsubject: jspb.Message.getFieldWithDefault(msg, 2, ""),
    teacher: jspb.Message.getFieldWithDefault(msg, 7, ""),
    workload: jspb.Message.getFieldWithDefault(msg, 8, 0),
    byschooltermList: jspb.Message.toObjectList(msg.getByschooltermList(),
    proto.report.SchoolTermItems.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.report.SchoolSubjectClassDiary}
 */
proto.report.SchoolSubjectClassDiary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.report.SchoolSubjectClassDiary;
  return proto.report.SchoolSubjectClassDiary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.report.SchoolSubjectClassDiary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.report.SchoolSubjectClassDiary}
 */
proto.report.SchoolSubjectClassDiary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchoolsubject(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeacher(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWorkload(value);
      break;
    case 9:
      var value = new proto.report.SchoolTermItems;
      reader.readMessage(value,proto.report.SchoolTermItems.deserializeBinaryFromReader);
      msg.addByschoolterm(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.report.SchoolSubjectClassDiary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.report.SchoolSubjectClassDiary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.report.SchoolSubjectClassDiary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.report.SchoolSubjectClassDiary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchoolsubject();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTeacher();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getWorkload();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getByschooltermList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.report.SchoolTermItems.serializeBinaryToWriter
    );
  }
};


/**
 * optional string schoolSubject = 2;
 * @return {string}
 */
proto.report.SchoolSubjectClassDiary.prototype.getSchoolsubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.SchoolSubjectClassDiary} returns this
 */
proto.report.SchoolSubjectClassDiary.prototype.setSchoolsubject = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string teacher = 7;
 * @return {string}
 */
proto.report.SchoolSubjectClassDiary.prototype.getTeacher = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.SchoolSubjectClassDiary} returns this
 */
proto.report.SchoolSubjectClassDiary.prototype.setTeacher = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 workload = 8;
 * @return {number}
 */
proto.report.SchoolSubjectClassDiary.prototype.getWorkload = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.report.SchoolSubjectClassDiary} returns this
 */
proto.report.SchoolSubjectClassDiary.prototype.setWorkload = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * repeated SchoolTermItems bySchoolTerm = 9;
 * @return {!Array<!proto.report.SchoolTermItems>}
 */
proto.report.SchoolSubjectClassDiary.prototype.getByschooltermList = function() {
  return /** @type{!Array<!proto.report.SchoolTermItems>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.report.SchoolTermItems, 9));
};


/**
 * @param {!Array<!proto.report.SchoolTermItems>} value
 * @return {!proto.report.SchoolSubjectClassDiary} returns this
*/
proto.report.SchoolSubjectClassDiary.prototype.setByschooltermList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.report.SchoolTermItems=} opt_value
 * @param {number=} opt_index
 * @return {!proto.report.SchoolTermItems}
 */
proto.report.SchoolSubjectClassDiary.prototype.addByschoolterm = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.report.SchoolTermItems, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.report.SchoolSubjectClassDiary} returns this
 */
proto.report.SchoolSubjectClassDiary.prototype.clearByschooltermList = function() {
  return this.setByschooltermList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.report.Enrollment.prototype.toObject = function(opt_includeInstance) {
  return proto.report.Enrollment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.report.Enrollment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.report.Enrollment.toObject = function(includeInstance, msg) {
  var f, obj = {
    studentName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    enrollDate: jspb.Message.getFieldWithDefault(msg, 2, ""),
    gender: jspb.Message.getFieldWithDefault(msg, 3, ""),
    origin: jspb.Message.getFieldWithDefault(msg, 4, ""),
    breed: jspb.Message.getFieldWithDefault(msg, 5, ""),
    birthDate: jspb.Message.getFieldWithDefault(msg, 6, ""),
    age: jspb.Message.getFieldWithDefault(msg, 7, ""),
    transferDate: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.report.Enrollment}
 */
proto.report.Enrollment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.report.Enrollment;
  return proto.report.Enrollment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.report.Enrollment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.report.Enrollment}
 */
proto.report.Enrollment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStudentName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnrollDate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGender(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrigin(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBreed(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBirthDate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAge(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransferDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.report.Enrollment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.report.Enrollment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.report.Enrollment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.report.Enrollment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStudentName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEnrollDate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGender();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOrigin();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBreed();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBirthDate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAge();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTransferDate();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string student_name = 1;
 * @return {string}
 */
proto.report.Enrollment.prototype.getStudentName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.Enrollment} returns this
 */
proto.report.Enrollment.prototype.setStudentName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string enroll_date = 2;
 * @return {string}
 */
proto.report.Enrollment.prototype.getEnrollDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.Enrollment} returns this
 */
proto.report.Enrollment.prototype.setEnrollDate = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string gender = 3;
 * @return {string}
 */
proto.report.Enrollment.prototype.getGender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.Enrollment} returns this
 */
proto.report.Enrollment.prototype.setGender = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string origin = 4;
 * @return {string}
 */
proto.report.Enrollment.prototype.getOrigin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.Enrollment} returns this
 */
proto.report.Enrollment.prototype.setOrigin = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string breed = 5;
 * @return {string}
 */
proto.report.Enrollment.prototype.getBreed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.Enrollment} returns this
 */
proto.report.Enrollment.prototype.setBreed = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string birth_date = 6;
 * @return {string}
 */
proto.report.Enrollment.prototype.getBirthDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.Enrollment} returns this
 */
proto.report.Enrollment.prototype.setBirthDate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string age = 7;
 * @return {string}
 */
proto.report.Enrollment.prototype.getAge = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.Enrollment} returns this
 */
proto.report.Enrollment.prototype.setAge = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string transfer_date = 8;
 * @return {string}
 */
proto.report.Enrollment.prototype.getTransferDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.Enrollment} returns this
 */
proto.report.Enrollment.prototype.setTransferDate = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.report.FinalResult.prototype.toObject = function(opt_includeInstance) {
  return proto.report.FinalResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.report.FinalResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.report.FinalResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    studentname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    schoolsubject: jspb.Message.getFieldWithDefault(msg, 2, ""),
    schoolsubjectorder: jspb.Message.getFieldWithDefault(msg, 3, 0),
    finalresult: jspb.Message.getFieldWithDefault(msg, 4, ""),
    average: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.report.FinalResult}
 */
proto.report.FinalResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.report.FinalResult;
  return proto.report.FinalResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.report.FinalResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.report.FinalResult}
 */
proto.report.FinalResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStudentname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchoolsubject(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSchoolsubjectorder(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFinalresult(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAverage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.report.FinalResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.report.FinalResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.report.FinalResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.report.FinalResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStudentname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSchoolsubject();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSchoolsubjectorder();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFinalresult();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAverage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string studentName = 1;
 * @return {string}
 */
proto.report.FinalResult.prototype.getStudentname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.FinalResult} returns this
 */
proto.report.FinalResult.prototype.setStudentname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string schoolSubject = 2;
 * @return {string}
 */
proto.report.FinalResult.prototype.getSchoolsubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.FinalResult} returns this
 */
proto.report.FinalResult.prototype.setSchoolsubject = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 schoolSubjectOrder = 3;
 * @return {number}
 */
proto.report.FinalResult.prototype.getSchoolsubjectorder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.report.FinalResult} returns this
 */
proto.report.FinalResult.prototype.setSchoolsubjectorder = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string finalResult = 4;
 * @return {string}
 */
proto.report.FinalResult.prototype.getFinalresult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.FinalResult} returns this
 */
proto.report.FinalResult.prototype.setFinalresult = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string average = 5;
 * @return {string}
 */
proto.report.FinalResult.prototype.getAverage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.FinalResult} returns this
 */
proto.report.FinalResult.prototype.setAverage = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.report.ClassDiaryGenerateRequest.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.report.ClassDiaryGenerateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.report.ClassDiaryGenerateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.report.ClassDiaryGenerateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.report.ClassDiaryGenerateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.report.SchoolSubjectClassDiary.toObject, includeInstance),
    enrollsList: jspb.Message.toObjectList(msg.getEnrollsList(),
    proto.report.Enrollment.toObject, includeInstance),
    finalresultList: jspb.Message.toObjectList(msg.getFinalresultList(),
    proto.report.FinalResult.toObject, includeInstance),
    schoolname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    referenceyear: jspb.Message.getFieldWithDefault(msg, 5, ""),
    grade: jspb.Message.getFieldWithDefault(msg, 6, ""),
    classroom: jspb.Message.getFieldWithDefault(msg, 7, ""),
    classperiod: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.report.ClassDiaryGenerateRequest}
 */
proto.report.ClassDiaryGenerateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.report.ClassDiaryGenerateRequest;
  return proto.report.ClassDiaryGenerateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.report.ClassDiaryGenerateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.report.ClassDiaryGenerateRequest}
 */
proto.report.ClassDiaryGenerateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.report.SchoolSubjectClassDiary;
      reader.readMessage(value,proto.report.SchoolSubjectClassDiary.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    case 2:
      var value = new proto.report.Enrollment;
      reader.readMessage(value,proto.report.Enrollment.deserializeBinaryFromReader);
      msg.addEnrolls(value);
      break;
    case 3:
      var value = new proto.report.FinalResult;
      reader.readMessage(value,proto.report.FinalResult.deserializeBinaryFromReader);
      msg.addFinalresult(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchoolname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceyear(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGrade(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassroom(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassperiod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.report.ClassDiaryGenerateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.report.ClassDiaryGenerateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.report.ClassDiaryGenerateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.report.ClassDiaryGenerateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.report.SchoolSubjectClassDiary.serializeBinaryToWriter
    );
  }
  f = message.getEnrollsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.report.Enrollment.serializeBinaryToWriter
    );
  }
  f = message.getFinalresultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.report.FinalResult.serializeBinaryToWriter
    );
  }
  f = message.getSchoolname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getReferenceyear();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGrade();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getClassroom();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getClassperiod();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * repeated SchoolSubjectClassDiary items = 1;
 * @return {!Array<!proto.report.SchoolSubjectClassDiary>}
 */
proto.report.ClassDiaryGenerateRequest.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.report.SchoolSubjectClassDiary>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.report.SchoolSubjectClassDiary, 1));
};


/**
 * @param {!Array<!proto.report.SchoolSubjectClassDiary>} value
 * @return {!proto.report.ClassDiaryGenerateRequest} returns this
*/
proto.report.ClassDiaryGenerateRequest.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.report.SchoolSubjectClassDiary=} opt_value
 * @param {number=} opt_index
 * @return {!proto.report.SchoolSubjectClassDiary}
 */
proto.report.ClassDiaryGenerateRequest.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.report.SchoolSubjectClassDiary, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.report.ClassDiaryGenerateRequest} returns this
 */
proto.report.ClassDiaryGenerateRequest.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * repeated Enrollment enrolls = 2;
 * @return {!Array<!proto.report.Enrollment>}
 */
proto.report.ClassDiaryGenerateRequest.prototype.getEnrollsList = function() {
  return /** @type{!Array<!proto.report.Enrollment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.report.Enrollment, 2));
};


/**
 * @param {!Array<!proto.report.Enrollment>} value
 * @return {!proto.report.ClassDiaryGenerateRequest} returns this
*/
proto.report.ClassDiaryGenerateRequest.prototype.setEnrollsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.report.Enrollment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.report.Enrollment}
 */
proto.report.ClassDiaryGenerateRequest.prototype.addEnrolls = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.report.Enrollment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.report.ClassDiaryGenerateRequest} returns this
 */
proto.report.ClassDiaryGenerateRequest.prototype.clearEnrollsList = function() {
  return this.setEnrollsList([]);
};


/**
 * repeated FinalResult finalResult = 3;
 * @return {!Array<!proto.report.FinalResult>}
 */
proto.report.ClassDiaryGenerateRequest.prototype.getFinalresultList = function() {
  return /** @type{!Array<!proto.report.FinalResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.report.FinalResult, 3));
};


/**
 * @param {!Array<!proto.report.FinalResult>} value
 * @return {!proto.report.ClassDiaryGenerateRequest} returns this
*/
proto.report.ClassDiaryGenerateRequest.prototype.setFinalresultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.report.FinalResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.report.FinalResult}
 */
proto.report.ClassDiaryGenerateRequest.prototype.addFinalresult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.report.FinalResult, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.report.ClassDiaryGenerateRequest} returns this
 */
proto.report.ClassDiaryGenerateRequest.prototype.clearFinalresultList = function() {
  return this.setFinalresultList([]);
};


/**
 * optional string schoolName = 4;
 * @return {string}
 */
proto.report.ClassDiaryGenerateRequest.prototype.getSchoolname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.ClassDiaryGenerateRequest} returns this
 */
proto.report.ClassDiaryGenerateRequest.prototype.setSchoolname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string referenceYear = 5;
 * @return {string}
 */
proto.report.ClassDiaryGenerateRequest.prototype.getReferenceyear = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.ClassDiaryGenerateRequest} returns this
 */
proto.report.ClassDiaryGenerateRequest.prototype.setReferenceyear = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string grade = 6;
 * @return {string}
 */
proto.report.ClassDiaryGenerateRequest.prototype.getGrade = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.ClassDiaryGenerateRequest} returns this
 */
proto.report.ClassDiaryGenerateRequest.prototype.setGrade = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string classroom = 7;
 * @return {string}
 */
proto.report.ClassDiaryGenerateRequest.prototype.getClassroom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.ClassDiaryGenerateRequest} returns this
 */
proto.report.ClassDiaryGenerateRequest.prototype.setClassroom = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string classPeriod = 8;
 * @return {string}
 */
proto.report.ClassDiaryGenerateRequest.prototype.getClassperiod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.report.ClassDiaryGenerateRequest} returns this
 */
proto.report.ClassDiaryGenerateRequest.prototype.setClassperiod = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.report.ClassDiaryGenerateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.report.ClassDiaryGenerateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.report.ClassDiaryGenerateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.report.ClassDiaryGenerateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    filechunk: msg.getFilechunk_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.report.ClassDiaryGenerateResponse}
 */
proto.report.ClassDiaryGenerateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.report.ClassDiaryGenerateResponse;
  return proto.report.ClassDiaryGenerateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.report.ClassDiaryGenerateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.report.ClassDiaryGenerateResponse}
 */
proto.report.ClassDiaryGenerateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFilechunk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.report.ClassDiaryGenerateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.report.ClassDiaryGenerateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.report.ClassDiaryGenerateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.report.ClassDiaryGenerateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilechunk_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes fileChunk = 1;
 * @return {!(string|Uint8Array)}
 */
proto.report.ClassDiaryGenerateResponse.prototype.getFilechunk = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes fileChunk = 1;
 * This is a type-conversion wrapper around `getFilechunk()`
 * @return {string}
 */
proto.report.ClassDiaryGenerateResponse.prototype.getFilechunk_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFilechunk()));
};


/**
 * optional bytes fileChunk = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFilechunk()`
 * @return {!Uint8Array}
 */
proto.report.ClassDiaryGenerateResponse.prototype.getFilechunk_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFilechunk()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.report.ClassDiaryGenerateResponse} returns this
 */
proto.report.ClassDiaryGenerateResponse.prototype.setFilechunk = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


goog.object.extend(exports, proto.report);
